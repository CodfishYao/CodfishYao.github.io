<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>UCAS超大规模集成电路与系统设计2024期末试题回忆版分享</title>
    <link href="/2024/11/25/UCAS%E8%B6%85%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E4%B8%8E%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A12024%E6%9C%9F%E6%9C%AB%E8%AF%95%E9%A2%98%E5%9B%9E%E5%BF%86%E7%89%88%E5%88%86%E4%BA%AB/"/>
    <url>/2024/11/25/UCAS%E8%B6%85%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%9B%86%E6%88%90%E7%94%B5%E8%B7%AF%E4%B8%8E%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A12024%E6%9C%9F%E6%9C%AB%E8%AF%95%E9%A2%98%E5%9B%9E%E5%BF%86%E7%89%88%E5%88%86%E4%BA%AB/</url>
    
    <content type="html"><![CDATA[<div class="note note-warning">            <p>本文分享的试题为<strong>多位</strong>同学在考试结束后<strong>共同</strong>回忆的结果<br>本页面<strong>免费</strong>为有需要的学弟学妹分享这份回忆版试题<br>本页面包含的回忆版试题仅为学习分享，任何人<font color="red"><strong>不得</strong></font>在未经该试题所属<strong>授课学校</strong>及<strong>授课教师</strong>知情同意的情况下进行商业化利用<br>请遵守本网站的<a style="text-decoration: underline;" href="#copyright">CC许可协议<a>的要求</a></a></p>          </div><h2 id="考试形式"><a href="#考试形式" class="headerlink" title="考试形式"></a>考试形式</h2><p>VLSI这门课的考试准备时间还是比较紧张的，由于2024秋季学期，果壳所有64学时以上的课程都被要求缩减，因此这门课程在第13周便结课考试了，留给我们的复习时间是比较短的。</p><p>VLSI这门课程的考核知识面很广，建议好好复习准备，考试时长为两个半小时，24年考了九道大题，试卷为纯英文。</p><h2 id="试题主要考点"><a href="#试题主要考点" class="headerlink" title="试题主要考点"></a>试题主要考点</h2><ul><li>第一题名词解释会从所有学过的章节中抽取名词进行考核，虽然范围很广但是考核的名词绝大多数都是常用的、重要的。  </li><li>第二题24年考了Y-Chart的论述题，这种题只要认真复习了都可以回答得差不多。  </li><li>第三题考了与器件有关的计算题，足够细心便能够作答出来。  </li><li>第四题也是一道论述题，考了MOS管在不同工作区沟道电容的变化。</li><li>第五题计算逻辑努力，不用多说，如果不会的话需要去看看书、看看PPT。</li><li>第六题很简单，画电路图。</li><li>第七题是论述和计算，论述部分如果认真复习了便可以说个七七八八，但是计算部分需要对公式有较好的掌握。</li><li>第八题今年考了描述电路，同学们基本感觉不是很复杂，主要是要能将自己的想法写出来，要有条理有逻辑。  <blockquote><p>例如，我们可以先说电路的组成，再按点分说电路的工作原理和作用。</p></blockquote></li><li>第九题考的是状态机，需要对最后一章有较好的掌握，复习要复习全面。</li></ul><h2 id="试题预览与下载"><a href="#试题预览与下载" class="headerlink" title="试题预览与下载"></a>试题预览与下载</h2><div id="pdfView" style="margin: 0px">    <iframe src="../../../../js/pdfjs/web/viewer.html?file=../../../2024/11/25/UCAS超大规模集成电路与系统设计2024期末试题回忆版分享/2024VLSI期末试题回忆版.pdf" width="100%" height="800px" id="pdf"></iframe></div><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>很高兴学弟学妹们可以访问到这个网站，希望大家都可以顺利通过考试。  </p><p><em>段老师真的很好，在此再次感谢段老师对课程的讲授</em>  </p>]]></content>
    
    
    <categories>
      
      <category>资料分享</category>
      
      <category>考试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>期末考试</tag>
      
      <tag>UCAS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github Pages自定义域名消失的解决方案</title>
    <link href="/2024/11/24/Github%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E6%B6%88%E5%A4%B1%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2024/11/24/Github%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E6%B6%88%E5%A4%B1%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h2 id="问题情况"><a href="#问题情况" class="headerlink" title="问题情况"></a>问题情况</h2><p>更新博客后，重新利用hexo生成静态文件推送至github后，github pages中的自定义域名消失。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在HEXO所在的路径<code>source\</code>中新建名为<strong>CNAME</strong>的文件，在文件中填写拥有的自定义域名（如<em> <a href="yaohaolin.cn">yaohaolin.cn</a> </em>）。  </p><div class="note note-warning">            <p><strong>注意：</strong></p><ol><li>CNAME文件名称必须全部大写；</li><li>CNAME文件中必须只能包含如<em> <a href="yaohaolin.cn">yaohaolin.cn</a> </em>的域名。</li></ol>          </div><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>本文参考自<a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/troubleshooting-custom-domains-and-github-pages">官方文档</a>。  </p><p><a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/troubleshooting-custom-domains-and-github-pages#cname-errors"><img src="github.png" alt="官方原文"></a></p>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HEXO</tag>
      
      <tag>Gihub</tag>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HEXO无法显示图片的解决方案</title>
    <link href="/2024/11/23/HEXO%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2024/11/23/HEXO%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<p>本文分享了HEXO无法加载图片的解决方案</p><span id="more"></span><h2 id="前提："><a href="#前提：" class="headerlink" title="前提："></a>前提：</h2><ol><li>已将<code>_config.yml</code>文件中的<code>post_asset_folder</code>设置为<code>true</code>  </li><li>Markdown引用图片语句无错误  </li><li>图片格式无问题</li></ol><h2 id="错误情况："><a href="#错误情况：" class="headerlink" title="错误情况："></a>错误情况：</h2><p>通过查看public中的静态文件或者本地调试时，发现HTML标签中，引用的图片路径有误</p><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>发现HEXO中<code>node_modules\hexo-asset-image\index.js</code> 文件内第54-59行代码如下所示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">if</span>(srcArray.<span class="hljs-property">length</span> &gt; <span class="hljs-number">1</span>)<br>srcArray.<span class="hljs-title function_">shift</span>();<br>src = srcArray.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;/&#x27;</span>);<br><br>$(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>, config.<span class="hljs-property">root</span> + link + src);<br><span class="hljs-variable language_">console</span>.<span class="hljs-property">info</span>&amp;&amp;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;update link as:--&gt;&quot;</span>+config.<span class="hljs-property">root</span> + link + src);<br></code></pre></td></tr></table></figure><p>将第58行代码修改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>, src);<br></code></pre></td></tr></table></figure><p>在文章中引用自动创建的与post文件具有相同名称的文件夹内的图片：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">图1</span>](<span class="hljs-link">p1.jpg</span>)<br><br>![<span class="hljs-string">图2</span>](<span class="hljs-link">p2.jpg</span>)<br></code></pre></td></tr></table></figure><p>分别运行命令<code>hexo clean</code>、<code>hexo g</code>和<code>hexo d</code>，<br>此时图片可以正常加载，大功告成。</p>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
      <category>HEXO</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HEXO</tag>
      
      <tag>图片</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一首课堂上写的英语小诗</title>
    <link href="/2024/11/05/%E4%B8%80%E9%A6%96%E5%B0%8F%E8%AF%97/"/>
    <url>/2024/11/05/%E4%B8%80%E9%A6%96%E5%B0%8F%E8%AF%97/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>课堂上随便写的，写得很烂，只是写着娱乐</p>          </div><span id="more"></span><p>There is a star on the sky.<br>I wanna fly-up pick in my hand.<br>The world will have no more ray.<br>Because that you are the light.  </p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>名为“AV.scr”“Photo.scr”“Video.scr”的服务器挖矿病毒</title>
    <link href="/2023/09/04/%E5%90%8D%E4%B8%BAAV-scr%E2%80%9CPhoto-scr%E2%80%9CVideo-scr%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92/"/>
    <url>/2023/09/04/%E5%90%8D%E4%B8%BAAV-scr%E2%80%9CPhoto-scr%E2%80%9CVideo-scr%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92/</url>
    
    <content type="html"><![CDATA[<blockquote><p>病毒文件：AV.scr，Photo.scr，Video.scr等</p><p>病毒名：Worm&#x2F;Python.Systweak.a</p><p>病毒ID：91539ba6837b71d0</p></blockquote><div class="note note-info">            <p>作者对病毒文件的分析没有专攻过，分享此篇博客仅供分享经验<br>该文最初发布于Bilibili网站： <a href="https://www.bilibili.com/opus/837282833318805507">点击进入</a>。</p>          </div><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>最近闲来无事，用火绒杀查了一下电脑。不查不知道，一查吓一跳，火绒竟然爆出了25个风险项目！</p><p><img src="p1.jpg" alt="图1"></p><p>这些蠕虫病毒哪里来的呢？通过查询这些病毒文件所在的路径，可以发现它们原来是来自当初为了方便共享而搭建的简易的FTP服务器。</p><p>这些病毒入侵了我的FTP服务器，并且遍历了服务器内的所有路径和文件，在每一层路径中都扎根埋种。</p><p>而它们竟然在我的电脑里埋伏了将近四个月。</p><p><img src="p2.jpg" alt="图2"></p><p><img src="p3.jpg" alt="图3"></p><h2 id="二、分析"><a href="#二、分析" class="headerlink" title="二、分析"></a>二、分析</h2><p>本节是关于分析该病毒的步骤。</p><p>为了防止电脑被感染，我将这些病毒进行备份提取后，再移至虚拟机，利用火绒剑等软件监控这些病毒的运行，并且找到了它们的目标。</p><p>首先，将“AV.scr”“Photo.scr”“Video.scr”三个文件的哈希值进行比较，可以发现三个文件除了名称不同，其余均相同，属相同病毒文件。</p><p><img src="p4.jpg" alt="图4"></p><p>其次，用火绒剑，任选三者其一打开，并其监控行为。</p><p>在监控中，我们可以发现，该病毒文件在WIN系统的运行大致逻辑如下（<strong>xxxx均指用户名称</strong>）：</p><ol><li><p>以屏幕保护程序的身份运行，读取注册表、调用相关DLL；</p></li><li><p>在“<em>C:\Users\xxxx\AppData\Local\Temp</em>”下创建以 <strong>“_MEIXXXXX”</strong> 为名称的文件夹；</p></li><li><p>在上述文件夹内写相关文件；  </p></li><li><p>创建进程，读注册表，调用DLL；  </p></li><li><p>在“<em>C:\Users\xxxx</em>”写自释放文件“<strong>HelpPane.exe</strong>”；  </p></li><li><p>修改、写入第3步写的文件；  </p></li><li><p>利用系统程序将第2、3步的文件写至“<em>C:\Windows\Temp</em>”；  </p></li><li><p>删除第2、3步写入的文件；  </p></li><li><p>结束病毒的安装。</p></li></ol><p><img src="p5.jpg" alt="图5" title="写入的文件（1）"></p><p><img src="p6.jpg" alt="图6" title="写入的文件（2）（在_MEIxxxxx文件夹中）"></p><p>通过写入的文件我们可以发现，该病毒是一种挖矿病毒，主体是“<strong>xmrig</strong>”这一款软件。</p><p>其中，根据病毒写入的文件我们大致可以推断该病毒利用Python进行编写；此外，在写入的certifi和httplib2文件夹中，存储了相关SSH密钥。</p><h2 id="三、处理"><a href="#三、处理" class="headerlink" title="三、处理"></a>三、处理</h2><h3 id="1-如何预防该病毒？"><a href="#1-如何预防该病毒？" class="headerlink" title="1.如何预防该病毒？"></a>1.如何预防该病毒？</h3><p>在搭建FTP服务器时，尽量不启用匿名登陆，或者修改匿名登陆默认密码。</p><h3 id="2-如何判断是否感染该病毒？"><a href="#2-如何判断是否感染该病毒？" class="headerlink" title="2.如何判断是否感染该病毒？"></a>2.如何判断是否感染该病毒？</h3><p>检查服务器内是否存在“AV.scr”“Photo.scr”“Video.scr”“info.zip”等文件；通过任务管理器检查是否存在名为“HelpPane.exe”和“xmrig.exe”的进程；检查如“C:\Users\xxxx”下是否有“HelpPane.exe”文件，“C:\Windows\Temp”下是否有如图“写入的文件（1）”中所示的内容；利用杀毒软件杀查病毒。</p><h3 id="3-如何处理该病毒？"><a href="#3-如何处理该病毒？" class="headerlink" title="3.如何处理该病毒？"></a>3.如何处理该病毒？</h3><p>不要点开（双击打开等）scr文件。</p><p>WIN系统下将服务器内的病毒文件全部删掉，将系统内病毒写入的文件删除完毕即可（可使用文件粉碎软件防止病毒恢复）；利用杀毒软件隔离病毒。</p><p>如果病毒难以清除，建议重装系统！</p><p><strong>注：LINUX下未见感染性（ubuntu）。</strong></p><p><strong>感谢阅读！</strong></p>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
      <category>服务器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>网络</tag>
      
      <tag>病毒</tag>
      
      <tag>服务器</tag>
      
      <tag>挖矿</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>你好！欢迎来到我的博客</title>
    <link href="/1970/01/01/firstBlog/"/>
    <url>/1970/01/01/firstBlog/</url>
    
    <content type="html"><![CDATA[<p>你好，这是我的第一篇博客~</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
